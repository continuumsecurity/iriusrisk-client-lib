---
swagger: "2.0"
info:
  description: Products API
  version: "1"
  title: IriusRisk API
host: demo.iriusrisk.com
basePath: /api/v1
schemes:
  - https
produces:
  - application/json
paths:
  /roles:
    post:
      tags:
        - Roles
      summary: Creates a new Role
      description: |
        Creates a new role.
        Conditions to be able to perform the action:
         - To have the permission **ROLES_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createRoleRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the new role
              permissions:
                type: array
                description: Role's permissions list
                items:
                  type: string
      responses:
        "201":
          description: Created Role
        "401":
          description: Authentication information is missing or invalid or not granted to perform this action.
          schema:
            $ref: '#/definitions/Error'
        "400":
          description: Bad request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Permission not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ROLES_UPDATE
  /roles/{role_name}:
    delete:
      tags:
        - Roles
      summary: Deletes an existing role
      description: |
        Deletes an existing role.
        Conditions to be able to perform the action:
        - To have the permission **ROLES_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: role_name
          in: path
          description: Role name to delete
          required: true
          type: string
          format: string
      responses:
        "204":
          description: Role has been deleted
        "400":
          description: Bad request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        "401":
          description: Authentication information is missing or invalid or not granted to perform this action.
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Role not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ROLES_UPDATE
  /groups:
    get:
      tags:
        - Groups
        - Business Units
      summary: Gets a list of all Groups
      description: |
        Gets a list of all user's groups.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: An array of groups
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
    post:
      tags:
        - Groups
        - Business Units
      summary: Creates a new user group
      description: |
        Creates a new user group.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createGroupRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "201":
          description: Group details
          schema:
            $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
  /groups/{groupIdentifier}:
    get:
      tags:
        - Groups
        - Business Units
      summary: Gets the group details.
      description: |
        Returns the group details for the requested group.
        Conditions to be able to perform the action:
           - If the caller has the PRODUCTS_LIST_ALL permission then all groups can be queried without restriction.
           - Without the PRODUCTS_LIST_ALL permission, the call will only return the group if the caller belongs to that group.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: groupIdentifier
          in: path
          description: unique name of the group
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Group details
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - PRODUCTS_LIST_ALL
    put:
      tags:
        - Groups
        - Business Units
      summary: Update a users group
      description: |
        Updates a users group.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: groupIdentifier
          in: path
          description: unique ref of the group
          required: true
          type: string
          format: string
        - in: body
          name: updateGroupRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "204":
          description: Group has been updated
          schema:
            $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Group not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
    delete:
      tags:
        - Groups
        - Business Units
      summary: Deletes a users group
      description: |
        Deletes a users group.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: groupIdentifier
          in: path
          description: unique name of the group
          required: true
          type: string
          format: string
      responses:
        "204":
          description: Group has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Group not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
  /groups/{group}/users:
    get:
      tags:
        - Groups
        - Business Units
        - Users
      summary: List users from a group
      description: |
        List users who belongs to a group.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to list users of a group, **if you belong to this group**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: group
          in: path
          description: name of the group
          required: true
          type: string
          format: string
      responses:
        "200":
          description: An array of users who belongs to the group
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
    put:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Assigns users to a group
      description: |
        Assigns users to a group.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to assign users to a group, **if you belong to this group**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: group
          in: path
          description: name of the group
          required: true
          type: string
          format: string
        - in: body
          name: assignUserGroupRequestBody
          description: JSON object that contains information to assign users to group
          required: true
          schema:
            type: object
            properties:
              usernames:
                type: array
                description: List of users to assign to group
                items:
                  type: string
      responses:
        "201":
          description: An array of users that have been assigned to group
          schema:
            type: object
            properties:
              group:
                type: string
              usernames:
                type: array
                items:
                  type: string
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
    delete:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Unassign a list of users from a group
      description: |
        Unassign a list of users from a group.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to unassign users from a group, **if you belong to this group**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: group
          in: path
          description: name of the group
          required: true
          type: string
          format: string
        - in: body
          name: unassingUsersGroupRequestBody
          description: JSON object that contains information to unassign users from group
          required: true
          schema:
            type: object
            properties:
              usernames:
                type: array
                description: List of usernames of users to be unassigned from a group
                items:
                  type: string
      responses:
        "204":
          description: All users have been unassigned
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /groups/{group}/users/{user}:
    delete:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Removes a user from a group
      description: |
        Unassign a user from a group.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to unassign user from a group, **if you belong to this group**.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: group
          in: path
          description: name of the group
          required: true
          type: string
          format: string
        - name: user
          in: path
          description: user to be removed from group
          required: true
          type: string
          format: string
      responses:
        "204":
          description: User has been removed from group
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      deprecated: true
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /businessunits:
    get:
      tags:
        - Groups
        - Business Units
      summary: Gets a list of all business units
      description: |
        Gets a list of all user's business units.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: An array of business units
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
    post:
      tags:
        - Groups
        - Business Units
      summary: Creates a new user business unit
      description: |
        Creates a new user business unit.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createGroupRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "201":
          description: Business Unit details
          schema:
            $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
  /businessunits/{businessUnitIdentifier}:
    get:
      tags:
        - Groups
        - Business Units
      summary: Gets the business unit details.
      description: |
        Returns the business unit details for the requested business unit.
        Conditions to be able to perform the action:
           - If the caller has the PRODUCTS_LIST_ALL permission then all business units can be queried without restriction.
           - Without the PRODUCTS_LIST_ALL permission, the call will only return the business unit if the caller belongs to that business unit.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitIdentifier
          in: path
          description: unique name of the business unit
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Business unit details
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCTS_LIST_ALL
    put:
      tags:
        - Groups
        - Business Units
      summary: Update a users business unit
      description: |
        Updates a users business unit.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitIdentifier
          in: path
          description: unique ref of the business unit
          required: true
          type: string
          format: string
        - in: body
          name: updateGroupRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "204":
          description: Business unit has been updated
          schema:
            $ref: '#/definitions/Group'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Business unit not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
    delete:
      tags:
        - Groups
        - Business Units
      summary: Deletes a users business unit
      description: |
        Deletes a users business unit.
        Conditions to be able to perform the action:
           - To have the permission **ALL_USERS_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitIdentifier
          in: path
          description: unique name of the business unit
          required: true
          type: string
          format: string
      responses:
        "204":
          description: Business unit has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Business unit not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
  /businessunits/{businessUnitName}/users:
    get:
      tags:
        - Groups
        - Business Units
        - Users
      summary: List users from a business unit
      description: |
        List users who belongs to a business unit.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to list users of a business unit, **if you belong to this business unit**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitName
          in: path
          description: name of the business unit
          required: true
          type: string
          format: string
      responses:
        "200":
          description: An array of users who belongs to the business unit
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
    put:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Assigns users to a business unit
      description: |
        Assigns users to a business unit.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to assign users to a business unit, **if you belong to this business unit**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitName
          in: path
          description: name of the business unit
          required: true
          type: string
          format: string
        - in: body
          name: assignUserGroupRequestBody
          description: JSON object that contains information to assign users to business unit
          required: true
          schema:
            type: object
            properties:
              usernames:
                type: array
                description: List of users to assign to business unit
                items:
                  type: string
      responses:
        "201":
          description: An array of users that have been assigned to business unit
          schema:
            type: object
            properties:
              group:
                type: string
              usernames:
                type: array
                items:
                  type: string
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
    delete:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Unassign a list of users from a business unit
      description: |
        Unassign a list of users from a business unit.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to unassign users from a business unit, **if you belong to this business unit**.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitName
          in: path
          description: name of the business unit
          required: true
          type: string
          format: string
        - in: body
          name: unassingUsersGroupRequestBody
          description: JSON object that contains information to unassign users from business unit
          required: true
          schema:
            type: object
            properties:
              usernames:
                type: array
                description: List of usernames of users to be unassigned from a business unit
                items:
                  type: string
      responses:
        "204":
          description: All users have been unassigned
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /businessunits/{businessUnitName}/users/{user}:
    delete:
      tags:
        - Groups
        - Business Units
        - Users
      summary: Removes a user from a business unit
      description: |
        Unassign a user from a business unit.
        Conditions to be able to perform the action:
         - To have the permission **ALL_USERS_UPDATE** granted, or
         - To have the permission **MANAGE_USERS_BU** granted. With this permission you will be able to unassign user from a business unit, **if you belong to this business unit**.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: businessUnitName
          in: path
          description: name of the business unit
          required: true
          type: string
          format: string
        - name: user
          in: path
          description: user to be removed from business unit
          required: true
          type: string
          format: string
      responses:
        "204":
          description: User has been removed from business unit
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /libraries:
    post:
      tags:
        - Libraries
      summary: Creates a Library
      description: |
        Creates a new empty Library.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "201":
          description: Empty Library created
          schema:
            $ref: '#/definitions/Library'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}:
    get:
      tags:
        - Libraries
      summary: Gets library details
      description: |
        Gets the library details.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
      responses:
        "200":
          description: Library details
          schema:
            $ref: '#/definitions/Library'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
    delete:
      tags:
        - Libraries
      summary: Deletes a Library
      description: |
        Deletes a library.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
      responses:
        "204":
          description: The library has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns:
    post:
      tags:
        - Libraries
        - Risk Patterns
      summary: Creates new Risk Pattern
      description: |
        Creates new Risk Pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - in: body
          name: createRiskPatternRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
              tags:
                type: array
                description: List of tags
                items:
                  type: string
      responses:
        "201":
          description: Risk Pattern details
          schema:
            $ref: '#/definitions/RiskPattern'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}:
    get:
      tags:
        - Libraries
        - Risk Patterns
      summary: Gets Risk Pattern details
      description: |
        Gets Risk Pattern details.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
      responses:
        "200":
          description: RiskPattern details
          schema:
            $ref: '#/definitions/RiskPattern'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
    delete:
      tags:
        - Libraries
        - Risk Patterns
      summary: Deletes a Risk Pattern
      description: |
        Deletes a Risk Pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
      responses:
        "204":
          description: The risk pattern has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/usecases:
    post:
      tags:
        - Libraries
        - Use Cases
      summary: Creates new use case in a library.
      description: |
        Creates new use case in a library.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - in: body
          name: createUseCaseLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
      responses:
        "201":
          description: UseCase details
          schema:
            $ref: '#/definitions/LibraryUseCase'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/usecases/{useCaseRef}/threats:
    post:
      tags:
        - Libraries
        - Threats
      summary: Creates a new threat in a library.
      description: |
        Creates a new threat in a library.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - name: useCaseRef
          in: path
          description: Reference for Use Case
          required: true
          type: string
        - in: body
          name: createThreatLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
              riskRating:
                type: object
                description: Risk Rating
                properties:
                  confidentiality:
                    type: string
                    description: Confidentiality
                    enum:
                      - none
                      - low
                      - medium
                      - high
                      - very-high
                  integrity:
                    type: string
                    description: Integrity
                    enum:
                      - none
                      - low
                      - medium
                      - high
                      - very-high
                  availability:
                    type: string
                    description: Availability
                    enum:
                      - none
                      - low
                      - medium
                      - high
                      - very-high
                  easeOfExploitation:
                    type: string
                    description: Ease Of Exploitation
                    enum:
                      - none
                      - low
                      - medium
                      - high
                      - very-high
      responses:
        "201":
          description: Threat details
          schema:
            $ref: '#/definitions/LibraryThreat'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/weaknesses:
    post:
      tags:
        - Libraries
        - Risk Patterns
        - Weaknesses
      summary: Creates a new weakness in a risk pattern
      description: |
        Creates a new Weakness in a risk pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - in: body
          name: createWeaknessLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Reference field value
              name:
                type: string
                description: Name field value
              desc:
                type: string
                description: Description field value
              impact:
                type: string
                description: Impact
                enum:
                  - none
                  - low
                  - medium
                  - high
                  - very-high
              test:
                $ref: '#/definitions/TestCommand'
      responses:
        "201":
          description: Weakness details
          schema:
            $ref: '#/definitions/LibraryWeakness'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/countermeasures:
    post:
      tags:
        - Libraries
        - Risk Patterns
        - Countermeasures
      summary: Creates new countermeasure in a risk pattern
      description: |
        Creates new countermeasure in a risk pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - in: body
          name: createCountermeasureLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            $ref: '#/definitions/ControlCommand'
      responses:
        "201":
          description: Countermeasure details
          schema:
            $ref: '#/definitions/LibraryControl'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/usecases/{useCaseRef}/threats/{threatRef}/weaknesses:
    put:
      tags:
        - Libraries
        - Risk Patterns
        - Use Cases
        - Threats
        - Weaknesses
      summary: Associates weakness to a threat in a risk pattern.
      description: |
        Associates weakness to a threat in a risk pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - name: useCaseRef
          in: path
          description: Reference for Use Case
          required: true
          type: string
        - name: threatRef
          in: path
          description: Reference for Threat
          required: true
          type: string
        - in: body
          name: associateWeaknessThreatLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Existing Weakness reference
      responses:
        "201":
          description: Weakness details
          schema:
            $ref: '#/definitions/LibraryWeakness'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  ? /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/usecases/{useCaseRef}/threats/{threatRef}/weaknesses/{weaknessRef}/countermeasures
    : put:
        tags:
          - Libraries
          - Risk Patterns
          - Use Cases
          - Threats
          - Weaknesses
          - Countermeasures
        summary: Associates a countermeasure to a weakness in a risk pattern.
        description: |
          Associates a countermeasure to a weakness in a risk pattern.
          Conditions to be able to perform the action:
            - To have the permission **LIBRARY_UPDATE** granted.
        consumes:
          - application/json
        parameters:
          - name: api-token
            in: header
            description: Authentication token
            required: true
            type: string
            format: string
          - name: libraryRef
            in: path
            description: Reference for library
            required: true
            type: string
          - name: riskPatternRef
            in: path
            description: Reference for Risk Pattern
            required: true
            type: string
          - name: useCaseRef
            in: path
            description: Reference for Use Case
            required: true
            type: string
          - name: threatRef
            in: path
            description: Reference for Threat
            required: true
            type: string
          - name: weaknessRef
            in: path
            description: Reference for Weakness
            required: true
            type: string
          - in: body
            name: associateCountermeasureWeaknessLibraryRequestBody
            description: JSON data that contains information of the fields
            required: true
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: Existing Countermesasure reference
        responses:
          "201":
            description: Countermeasure details
            schema:
              $ref: '#/definitions/LibraryControl'
          "403":
            description: API is not enabled
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
        x-permissions:
          - LIBRARY_UPDATE
  /libraries/{libraryRef}/riskpatterns/{riskPatternRef}/usecases/{useCaseRef}/threats/{threatRef}/countermeasures:
    put:
      tags:
        - Libraries
        - Use Cases
        - Threats
        - Countermeasures
      summary: Associates a countermeasure to a threat in a risk pattern.
      description: |
        Associates a countermeasure to a threat in a risk pattern.
        Conditions to be able to perform the action:
          - To have the permission **LIBRARY_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: libraryRef
          in: path
          description: Reference for library
          required: true
          type: string
        - name: riskPatternRef
          in: path
          description: Reference for Risk Pattern
          required: true
          type: string
        - name: useCaseRef
          in: path
          description: Reference for Use Case
          required: true
          type: string
        - name: threatRef
          in: path
          description: Reference for Threat
          required: true
          type: string
        - in: body
          name: associateCountermeasureThreatLibraryRequestBody
          description: JSON data that contains information of the fields
          required: true
          schema:
            type: object
            properties:
              ref:
                type: string
                description: Existing Countermeasure reference
              mitigation:
                type: integer
                description: Mitigation
      responses:
        "201":
          description: Countermeasure details
          schema:
            $ref: '#/definitions/LibraryControl'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - LIBRARY_UPDATE
  /products:
    get:
      tags:
        - Products
      summary: Gets a list of all products.
      description: |
        Gets a list of all products visible by the user who perform the call.
        Conditions to be able to perform the action:
          - No permissions are required to perform this action.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: max
          in: query
          description: maximun number of items returned
          required: false
          type: integer
          default: 1
          format: int32
        - name: index
          in: query
          description: index of the first element to return
          required: false
          type: integer
          default: 1
          format: int32
        - name: workflowState
          in: query
          description: filter for products by workflow state ref
          required: false
          type: string
          format: string
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductShort'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions: []
    post:
      tags:
        - Products
      summary: Creates a new product
      description: |
        Createa a new product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_CREATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createProductRequestBody
          description: JSON data that contains information to create new product
          required: true
          schema:
            $ref: '#/definitions/CreateProduct'
      responses:
        "201":
          description: Gets product details
          schema:
            $ref: '#/definitions/ProductShort'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_CREATE
  /products/{ref}:
    get:
      tags:
        - Products
      summary: Gets product details
      description: |
        Gets the details of a product.
        Conditions to be able to perform the action:
          - No permissions are required to perform this action.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: Product details
          schema:
            $ref: '#/definitions/Product'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions: []
    put:
      tags:
        - Products
      summary: Updates a product
      description: |
        Updates the details of a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - in: body
          name: updateProductRequestBody
          description: JSON data that contains product details to update
          required: true
          schema:
            $ref: '#/definitions/UpdateProduct'
      responses:
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        "200":
          description: Product updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
    delete:
      tags:
        - Products
      summary: Deletes a product
      description: |
        Deletes a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_DELETE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "204":
          description: The product has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_DELETE
  /products/upload:
    post:
      tags:
        - Products
        - Libraries
        - Templates
      summary: Creates a new product, library or template from a XML file upload.
      description: |
        Creates a new product, library or template from a XML file upload.
        Conditions to be able to perform the action:
        - To have the permission **PRODUCT_CREATE** granted allows to create a product.
        - To have the permission **LIBRARY_UPDATE** granted allows to create a library.
        - To have the permission **TEMPLATE_UPDATE** granted allows to create a template.
      consumes:
        - multipart/form-data
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: formData
          description: Product ref
          required: true
          type: string
          format: string
        - name: name
          in: formData
          description: Product name
          required: true
          type: string
          format: string
        - name: type
          in: formData
          description: Product type - STANDARD (By default), TEMPLATE or LIBRARY
          required: false
          type: string
          format: string
        - name: fileName
          in: formData
          description: File to upload in XML format
          required: true
          type: file
      responses:
        "201":
          description: Product details
          schema:
            $ref: '#/definitions/ProductShort'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_CREATE
        - LIBRARY_UPDATE
        - TEMPLATE_UPDATE
  /products/upload/{ref}:
    post:
      tags:
        - Products
      summary: Updates an existing product from a XML file upload.
      description: |
        Updates a product from a XML file upload.
        Conditions to be able to perform the action:
        - To have the permission **PRODUCT_UPDATE** granted allows to update a product.
      consumes:
        - multipart/form-data
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
          format: string
        - name: fileName
          in: formData
          description: File to upload in XML format
          required: true
          type: file
        - name: deleteCountermeasures
          in: formData
          description: This flag indicates if the rules execution will delete the threat and countermeasures which don't apply to the new product threat model. If true, the threats and countermeasures will be automatically removed from the model. If false, the threats and countermeasures won't be removed from the model.
          required: false
          type: string
          format: string
      responses:
        "200":
          description: Product details
          schema:
            $ref: '#/definitions/ProductShort'
        "400":
          description: error in the call
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
  /products/{ref}/groups:
    get:
      tags:
        - Products
        - Groups
      summary: List all groups assigned to a product
      description: |
        List all groups assigned to a product.
            Conditions to be able to perform the action:
                - If the caller has the PRODUCTS_LIST_ALL permission then all products can be queried without restriction.
                - Without the PRODUCTS_LIST_ALL permission, the call will only return the groups if the caller belongs to that product.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference to product
          required: true
          type: string
      responses:
        "200":
          description: An array of groups assigned to the product
          schema:
            type: array
            items:
              type: string
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCTS_LIST_ALL
    put:
      tags:
        - Products
        - Groups
      summary: Assigns groups of users to a product.
      description: |
        Assigns groups of users to a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference for product
          required: true
          type: string
        - in: body
          name: assignGroupsProductRequestBody
          description: JSON object that contains information to assign groups to product
          required: true
          schema:
            type: object
            properties:
              groups:
                type: array
                description: List of groups to assign to product
                items:
                  type: string
      responses:
        "201":
          description: Product details including groups assigned
          schema:
            $ref: '#/definitions/ProductShortGroups'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
    delete:
      tags:
        - Products
        - Groups
      summary: Unassigns a list of user groups from a product.
      description: |
        Unassigns a list of user groups from a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference for product
          required: true
          type: string
        - in: body
          name: unassignGroupsProductRequestBody
          description: JSON object that contains information to unassign groups from a product
          required: true
          schema:
            type: object
            properties:
              groups:
                type: array
                description: List of groups to unassign from product
                items:
                  type: string
      responses:
        "200":
          description: An object with an array of user groups that have been unassigned and an array of user groups that have not been found in the project
          schema:
            type: object
            properties:
              unassigned:
                type: array
                items:
                  type: string
              notFound:
                type: array
                items:
                  type: string
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
  /products/{ref}/users:
    get:
      tags:
        - Products
        - Users
      summary: List all users assigned to a product
      description: |
        List all users assigned to a product.
            Conditions to be able to perform the action:
                - No permissions are required to perform this action.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference to product
          required: true
          type: string
      responses:
        "200":
          description: An array of users assigned to the product
          schema:
            type: array
            items:
              type: string
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Products
        - Users
      summary: Assigns users to a product.
      description: |
        Assigns users to a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference for product
          required: true
          type: string
        - in: body
          name: assignUsersProductRequestBody
          description: JSON data that contains the information to assign users to product
          required: true
          schema:
            type: object
            properties:
              users:
                type: array
                description: List of users to assign to product
                items:
                  type: string
      responses:
        "201":
          description: Product details including users assigned
          schema:
            $ref: '#/definitions/ProductShortUsers'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
    delete:
      tags:
        - Products
        - Users
      summary: Unassigns a list of users from a product.
      description: |
        Unassign a list of users from a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference for product
          required: true
          type: string
        - in: body
          name: unassignUsersProductRequestBody
          description: JSON object that contains information to unassign users from product
          required: true
          schema:
            type: object
            properties:
              users:
                type: array
                description: List of users to unassign from a product
                items:
                  type: string
      responses:
        "204":
          description: All users have been unassigned
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
  /products/{ref}/users/{user}:
    delete:
      tags:
        - Products
        - Users
      summary: Unassigns a user from a product
      description: |
        Unassigns a user from a product.
        Conditions to be able to perform the action:
          - To have the permission **PRODUCT_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: Reference for product
          required: true
          type: string
        - name: user
          in: path
          description: Username of the user who will be unassigned from the product
          required: true
          type: string
      responses:
        "204":
          description: User has been unassigned from the product
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - PRODUCT_UPDATE
  /products/{ref}/risks:
    get:
      tags:
        - Products
        - Risks
      summary: Gets the risks summary of a product
      description: |
        This endpoint returns a summary of the risks of a product.
        Conditions to be able to perform the action:
          - No permissions are required to perform this action.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: Product risks
          schema:
            $ref: '#/definitions/RiskSummary'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions: []
  /products/{ref}/controls:
    get:
      tags:
        - Products
        - Controls
      summary: Gets a list of all product countermeasures
      description: |
        Returns a list of all the countermeasures of a product.
        Conditions to be able to perform the action:
          - To have the permission **COUNTERMEASURE_VIEW** granted, or
          - To have the permission **COUNTERMEASURE_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: An array of product countermeasures
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentControl'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - COUNTERMEASURE_VIEW
        - COUNTERMEASURE_UPDATE
  /products/{ref}/controls/implemented:
    get:
      tags:
        - Products
        - Controls
      summary: Gets a list of all implemented countermeasures of a product.
      description: |
        Returns a list of all the implemented countermeasures of a product.
        Conditions to be able to perform the action:
          - To have the permission **COUNTERMEASURE_VIEW** granted, or
          - To have the permission **COUNTERMEASURE_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: An array of product countermeasures
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentControl'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - COUNTERMEASURE_VIEW
        - COUNTERMEASURE_UPDATE
  /products/{ref}/controls/required:
    get:
      tags:
        - Products
        - Controls
      summary: Gets a list of all required countermeasures of a product
      description: |
        Returns a list of all the required countermeasures of a product.
        Conditions to be able to perform the action:
          - To have the permission **COUNTERMEASURE_VIEW** granted, or
          - To have the permission **COUNTERMEASURE_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: An array of product countermeasures
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentControl'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - COUNTERMEASURE_VIEW
        - COUNTERMEASURE_UPDATE
  /products/{ref}/components/{componentRef}/controls/{controlRef}/status:
    put:
      tags:
        - Products
        - Controls
      summary: Sets the desired status to a countermeasure
      description: |
        Sets the desired status to a countermeasure.
        Possible values are:
                    - implemented
                    - recommended
                    - rejected
                    - required
        Conditions to be able to perform the action:
          - To have the permission **COUNTERMEASURE_UPDATE** granted to set any state.
          - To have the permission **COUNTERMEASURE_SELECT_IMPLEMENTED** granted to set implemented state.
          - To have the permission **COUNTERMEASURE_SELECT_RECOMMENDED** granted to set recommended state.
          - To have the permission **COUNTERMEASURE_SELECT_REJECTED** granted to set reject state.
          - To have the permission **COUNTERMEASURE_SELECT_REQUIRED** granted to set required state.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - name: componentRef
          in: path
          description: ID for component
          required: true
          type: string
        - name: controlRef
          in: path
          description: Control ref
          required: true
          type: string
          format: string
        - in: body
          name: updateStatusCountermeasureRequestBody
          description: JSON data that contains the information to update countermeasure
          required: true
          schema:
            type: object
            properties:
              statusName:
                type: string
                description: New state of the countermeasure ( rejected | recommended | required | implemented )
                enum:
                  - rejected
                  - recommended
                  - required
                  - implemented
              rejectedReason:
                type: string
                description: Reason for rejecting the countermeasure
      responses:
        "200":
          description: An empty array
        "404":
          description: Product, component or control not found
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - COUNTERMEASURE_UPDATE
  /products/{ref}/threats:
    get:
      tags:
        - Products
        - Threats
      summary: Gets a list of all threats of a product
      description: |
        Returns a list of all the threats of a product.
        Conditions to be able to perform the action:
          - To have the permission **THREAT_VIEW** granted, or
          - To have the permission **THREAT_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: An array of product threats
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentUseCaseThreatShort'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - THREAT_VIEW
        - THREAT_UPDATE
  /products/{ref}/weaknesses:
    get:
      tags:
        - Products
        - Weaknesses
      summary: Gets a list of all weaknesses of a product
      description: |
        Returns a list of all the weaknesses of a product.
        Conditions to be able to perform the action:
          - To have the permission **THREAT_VIEW** granted, or
          - To have the permission **THREAT_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: An array of product weaknesses
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentWeakness'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - THREAT_VIEW
        - THREAT_UPDATE
  /products/{ref}/weaknesses/{test_state}:
    get:
      tags:
        - Products
        - Weaknesses
      summary: Gets a list of all weaknesses of a product filtered by test state
      description: |
        Returns a list of all the weaknesses of a product.
        With the optional parameter `test_state` can filter the weakness by test state.
        Conditions to be able to perform the action:
          - To have the permission **THREAT_VIEW** granted, or
          - To have the permission **THREAT_UPDATE** granted.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - name: test_state
          in: path
          description: Code for a test state
          required: true
          type: string
          enum:
            - failed
            - error
            - not-tested
            - passed
            - not-applicable
            - partially-tested
      responses:
        "200":
          description: An array of product weaknesses
          schema:
            type: array
            items:
              $ref: '#/definitions/ComponentWeakness'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - THREAT_VIEW
        - THREAT_UPDATE
  /products/{ref}/components/{componentRef}/tests/{cwe}:
    put:
      tags:
        - Products
        - Components
        - Tests
      summary: Updates a single test to a component.
      description: |
        Updates a single test to a component.
        Conditions to be able to perform the action:
          - To have the permission **TEST_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - name: componentRef
          in: path
          description: ID for component
          required: true
          type: string
        - name: cwe
          in: path
          description: countermeasure or weakness CWE
          required: true
          type: string
        - in: body
          name: updateStatusTestRequestBody
          description: JSON data that contains the information to update test
          required: true
          schema:
            type: object
            properties:
              state:
                type: string
                description: New state of the test ( not-tested | passed | failed | error )
                enum:
                  - not-tested
                  - passed
                  - failed
                  - error
              output:
                type: string
                description: new output of the test
      responses:
        "200":
          description: Tests updated
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                source:
                  type: object
                  properties:
                    result:
                      type: string
                    output:
                      type: string
                control:
                  type: object
                  properties:
                    name:
                      type: string
                    component:
                      type: string
                    project:
                      type: string
                weakness:
                  type: object
                  properties:
                    name:
                      type: string
                    component:
                      type: string
                    project:
                      type: string
        "400":
          description: error in the call
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - TEST_UPDATE
  /products/{ref}/tests/{testType}/upload:
    post:
      tags:
        - Products
        - Tests
      summary: Imports test results from different sources to a product.
      description: |
        Imports test results from different sources (OWASP ZAP, Cucumber, Micro Focus Fortify) uploading files. More than one file can be attached to the call.
        Conditions to be able to perform the action:
          - To have the permission **TEST_UPDATE** granted.
      consumes:
        - multipart/form-data
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - name: testType
          in: path
          description: Type of test to be imported (zap|cucumber|junit|hp-fortify)
          required: true
          type: string
          enum:
            - zap
            - cucumber
            - junit
            - hp-fortify
        - name: fileName
          in: formData
          description: File to upload
          required: false
          type: file
      responses:
        "201":
          description: Tests updated. Returns the number of changed tests
          schema:
            type: object
            properties:
              changedTest:
                type: number
        "400":
          description: Error in the call. Misspelled or undefined test Type
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - TEST_UPDATE
  /products/{ref}/components/{componentRef}/tests/{testType}/upload:
    post:
      tags:
        - Products
        - Components
        - Tests
      summary: Imports test results from different sources to a component
      description: |
        Imports test results from different sources (OWASP ZAP, Cucumber, Micro Focus Fortify) into the specified component. More than one file can be attached to the call.
        Conditions to be able to perform the action:
          - To have the permission **TEST_UPDATE** granted.
      consumes:
        - multipart/form-data
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
        - name: componentRef
          in: path
          description: ID for component
          required: true
          type: string
        - name: testType
          in: path
          description: Type of test to be imported (zap|cucumber|junit|hp-fortify)
          required: true
          type: string
          enum:
            - zap
            - cucumber
            - junit
            - hp-fortify
        - name: fileName
          in: formData
          description: File to upload
          required: false
          type: file
      responses:
        "201":
          description: Tests updated. Returns the number of changed tests
          schema:
            type: object
            properties:
              changedTest:
                type: number
        "400":
          description: Error in the call. Misspelled or undefined test Type
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - TEST_UPDATE
  /products/{ref}/diagram/image:
    get:
      tags:
        - Products
      summary: Gets diagram image for product.
      description: |
        Gets a an image in png format of the product diagram.
        Conditions to be able to perform the action:
          - No special permissions are required to perform this action.
          - This API call can be used only if the user who performs the call has visibility over the product.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for product
          required: true
          type: string
      responses:
        "200":
          description: A Diagram Image
          schema:
            type: string
        "401":
          description: Authentication information is missing or invalid or not granted to perform this action.
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Product or Diagram not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions: []
  /users:
    get:
      tags:
        - Users
      summary: List of all Users.
      description: |
        Returns a list of all the users of the system.
        Conditions to be able to perform the action:
          - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "400":
          description: Bad request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
    post:
      tags:
        - Users
      summary: Creates a new user
      description: |
        Creates a new user.
        Conditions to be able to perform the action:
          - To have the permission **ALL_USERS_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - in: body
          name: createUserRequestBody
          description: JSON data that contains information to creates new user
          required: true
          schema:
            type: object
            required:
              - auth
              - email
              - firstName
              - lastName
              - roleGroups
              - username
            properties:
              username:
                type: string
                description: Username of the user
              auth:
                type: string
                description: Authentication type
                enum:
                  - ldap
                  - saml
              email:
                type: string
                description: Email of the user
              firstName:
                type: string
                description: First name of the user
              lastName:
                type: string
                description: Last name of the user
              roleGroups:
                type: array
                description: List of roles' refs to assign to the user. Can be an empty list.
                items:
                  type: string
      responses:
        "201":
          description: User has been created
        "400":
          description: Bad request
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
  /users/{username}:
    get:
      tags:
        - Users
      summary: Get all the information of a user
      description: |
        Get all the relevant information of a user
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: username
          in: path
          description: User's username
          required: true
          type: string
      responses:
        "200":
          description: The data of the user
          schema:
            $ref: '#/definitions/UserDetailed'
        "400":
          description: Bad request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Users
      summary: Deletes a user
      description: |
        Deletes a user.
        Conditions to be able to perform the action:
          - To have the permission **ALL_USERS_UPDATE** granted, or
          - To have the permission **MANAGE_USERS_BU** granted. Having this permission you can delete users who belongs to some of your user groups.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: username
          in: path
          description: User's username
          required: true
          type: string
      responses:
        "204":
          description: User has been deleted
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: User not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /users/{username}/token:
    post:
      tags:
        - Users
        - Token
      summary: Generates a user API token
      description: |
        Generates a new user API token. If the user already has a generated API token, generates a new one.
        Conditions to be able to perform the action:
          - To have the permission **ALL_USERS_UPDATE** granted, or
          - To have the permission **MANAGE_USERS_BU** granted. Having this permission you can generate a user API token to users who belongs to some of your user groups.
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: username
          in: path
          description: User's username
          required: true
          type: string
      responses:
        "201":
          description: The user API token
          schema:
            type: string
        "401":
          description: Authentication information is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: User not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ALL_USERS_UPDATE
        - MANAGE_USERS_BU
  /rules/product/{ref}:
    put:
      tags:
        - Rules
        - Products
      summary: Executes rules by a product
      description: |
        Execute the rules engine for a product and for all components within the product.  If the deleteCountermeasures parameter is true, then threats and countermeasure that no longer apply to the model will automatically
        be removed.  If it is false, then those threats and countermeasures will remain in the model.
          - To have the permission **ARCHITECTURE_UPDATE** granted.
      consumes:
        - application/json
      parameters:
        - name: api-token
          in: header
          description: Authentication token
          required: true
          type: string
          format: string
        - name: ref
          in: path
          description: ID for Product
          required: true
          type: string
        - name: deleteCountermeasures
          in: header
          description: This flag indicates if the rules execution will delete the threat and countermeasures which don't apply to the new product threat model. If true, the threats and countermeasures will be automatically removed from the model. If false, the threats and countermeasures won't be removed from the model.
          required: false
          type: string
          format: string
      responses:
        "200":
          description: Rules executed properly
        "403":
          description: API is not enabled
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-permissions:
        - ARCHITECTURE_UPDATE
definitions:
  ProductShort:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      revision:
        type: integer
        format: int32
        default: 1
      type:
        type: string
      status:
        type: string
      priority:
        type: integer
        format: int32
        default: 0
      tags:
        type: string
      workflowState:
        type: string
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  CreateProduct:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      tags:
        type: string
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  UpdateProduct:
    type: object
    properties:
      name:
        type: string
      desc:
        type: string
      tags:
        type: string
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  LibraryThreat:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      mitigation:
        type: integer
      risk:
        type: integer
      inherentRisk:
        type: integer
      projectedRisk:
        type: integer
      riskRating:
        $ref: '#/definitions/RiskRating'
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      weaknesses:
        type: array
        items:
          $ref: '#/definitions/ThreatWeakness'
      controls:
        type: array
        items:
          $ref: '#/definitions/ThreatControl'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  RiskPattern:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      tags:
        type: array
        description: List of tags
        items:
          type: string
      weaknesses:
        type: array
        items:
          $ref: '#/definitions/LibraryWeakness'
      countermeasures:
        type: array
        items:
          $ref: '#/definitions/LibraryControl'
      usecases:
        type: array
        items:
          $ref: '#/definitions/LibraryUseCase'
  LibraryUseCase:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      threats:
        type: array
        items:
          $ref: '#/definitions/LibraryThreat'
  Library:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      riskPatterns:
        type: array
        items:
          $ref: '#/definitions/RiskPattern'
  LibraryWeakness:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      state:
        type: string
      impact:
        type: string
      test:
        $ref: '#/definitions/Test'
      controls:
        type: array
        items:
          $ref: '#/definitions/ThreatControl'
  LibraryControl:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      platform:
        type: string
      cost:
        type: integer
      risk:
        type: integer
      state:
        type: string
      mitigation:
        type: integer
      implementations:
        type: array
        items:
          $ref: '#/definitions/Implementation'
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      standards:
        type: array
        items:
          $ref: '#/definitions/Standard'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
      test:
        $ref: '#/definitions/Test'
  ProductShortGroups:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      revision:
        type: integer
        format: int32
        default: 1
      type:
        type: string
      status:
        type: string
      priority:
        type: integer
        format: int32
        default: 0
      tags:
        type: string
      workflowState:
        type: string
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
      groups:
        type: array
        items:
          type: string
  ProductShortUsers:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      revision:
        type: integer
        format: int32
        default: 1
      type:
        type: string
      status:
        type: string
      priority:
        type: integer
        format: int32
        default: 0
      tags:
        type: string
      workflowState:
        type: string
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
      users:
        type: array
        items:
          type: string
  Product:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      revision:
        type: integer
      type:
        type: string
      status:
        type: string
      priority:
        type: integer
      tags:
        type: string
      desc:
        type: string
      workflowState:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
      diagram:
        $ref: '#/definitions/ArchitectureDiagram'
      assets:
        type: array
        items:
          $ref: '#/definitions/ProductAsset'
      accessTypes:
        type: array
        items:
          $ref: '#/definitions/ProductAccessType'
      trustZones:
        type: array
        items:
          $ref: '#/definitions/ProductTrustZone'
      settings:
        type: array
        items:
          $ref: '#/definitions/ProductSetting'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
      supportedStandards:
        type: array
        items:
          $ref: '#/definitions/SupportedStandard'
      categoryComponents:
        type: array
        items:
          $ref: '#/definitions/CategoryComponent'
      componentDefinitions:
        type: array
        items:
          $ref: '#/definitions/ComponentDefinition'
      components:
        type: array
        items:
          $ref: '#/definitions/Component'
      dataflows:
        type: array
        items:
          $ref: '#/definitions/DataFlow'
      users:
        type: array
        items:
          type: string
      groups:
        type: array
        items:
          type: string
  ArchitectureDiagram:
    type: object
    properties:
      draft:
        type: boolean
      schema:
        type: string
        description: The representation of the architecture diagram in Draw.io XML format encoded in Base64
  Question:
    type: object
    properties:
      ref:
        type: string
  ProductAsset:
    type: object
    properties:
      name:
        type: string
      desc:
        type: string
      identifier:
        type: string
      classification:
        type: object
        properties:
          name:
            type: string
          desc:
            type: string
          confidentiality:
            type: integer
          integrity:
            type: integer
          availability:
            type: integer
  ProductAccessType:
    type: object
    properties:
      name:
        type: string
      value:
        type: integer
  ProductTrustZone:
    type: object
    properties:
      name:
        type: string
      desc:
        type: string
      trustRating:
        type: integer
  ProductSetting:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  Udt:
    type: object
    properties:
      ref:
        type: string
      value:
        type: string
    description: Custom field with reference and value
  Component:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      groupName:
        type: string
        description: This field always returns null. All group names have been transformed into tags.
      tags:
        type: array
        description: List of all tags
        items:
          type: string
      position:
        type: integer
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
      trustZones:
        type: array
        items:
          $ref: '#/definitions/ComponentTrustZone'
      assets:
        type: array
        items:
          $ref: '#/definitions/ComponentAsset'
      weaknesses:
        type: array
        items:
          $ref: '#/definitions/ComponentWeakness'
      controls:
        type: array
        items:
          $ref: '#/definitions/ComponentControl'
      usecases:
        type: array
        items:
          $ref: '#/definitions/ComponentUseCase'
  ComponentTrustZone:
    type: object
    properties:
      name:
        type: string
  ComponentAsset:
    type: object
    properties:
      name:
        type: string
      accessType:
        type: string
  ComponentWeakness:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      state:
        type: integer
      impact:
        type: integer
      desc:
        type: string
      test:
        $ref: '#/definitions/Test'
  ComponentControl:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      issueId:
        type: string
      platform:
        type: string
      cost:
        type: integer
      risk:
        type: integer
      state:
        type: string
      owner:
        type: string
      desc:
        type: string
      source:
        type: string
      mitigation:
        type: string
      library:
        type: string
        description: Reference of the Library
      implementations:
        type: array
        items:
          $ref: '#/definitions/Implementation'
      threats:
        type: array
        items:
          $ref: '#/definitions/ThreatNameAndRef'
      weaknesses:
        type: array
        items:
          $ref: '#/definitions/WeaknessNameAndRef'
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      standards:
        type: array
        items:
          $ref: '#/definitions/Standard'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
      test:
        $ref: '#/definitions/Test'
  Test:
    type: object
    properties:
      expiryDate:
        type: string
      expiryPeriod:
        type: integer
      steps:
        type: string
      notes:
        type: string
      source:
        $ref: '#/definitions/TestSource'
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  TestSource:
    type: object
    properties:
      filename:
        type: string
      args:
        type: string
      type:
        type: string
      result:
        type: string
      enabled:
        type: boolean
      timestamp:
        type: string
      output:
        type: string
  Reference:
    type: object
    properties:
      name:
        type: string
      url:
        type: string
  Standard:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
  Implementation:
    type: object
    properties:
      platform:
        type: string
      desc:
        type: string
  ThreatNameAndRef:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
  WeaknessNameAndRef:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
  ComponentUseCase:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      threats:
        type: array
        items:
          $ref: '#/definitions/Threat'
  ComponentUseCaseShort:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      desc:
        type: string
      threats:
        type: array
        items:
          $ref: '#/definitions/ThreatShort'
  ComponentUseCaseThreatShort:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      useCase:
        $ref: '#/definitions/ComponentUseCaseShort'
  ThreatShort:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      state:
        type: string
      owner:
        type: string
      desc:
        type: string
      source:
        type: string
      riskRating:
        $ref: '#/definitions/RiskRating'
      inherentRisk:
        type: integer
      risk:
        type: integer
      projectedRisk:
        type: integer
      mitigation:
        type: integer
      library:
        type: string
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  Threat:
    type: object
    properties:
      ref:
        type: string
      name:
        type: string
      state:
        type: string
      owner:
        type: string
      desc:
        type: string
      source:
        type: string
      riskRating:
        $ref: '#/definitions/RiskRating'
      inherentRisk:
        type: integer
      risk:
        type: integer
      projectedRisk:
        type: integer
      mitigation:
        type: integer
      library:
        type: string
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
      weaknesses:
        type: array
        items:
          $ref: '#/definitions/ThreatWeakness'
      controls:
        type: array
        items:
          $ref: '#/definitions/ThreatControl'
      udts:
        type: array
        items:
          $ref: '#/definitions/Udt'
  ThreatWeakness:
    type: object
    properties:
      ref:
        type: string
      controls:
        type: array
        items:
          $ref: '#/definitions/ThreatControl'
  RiskRating:
    type: object
    properties:
      confidentiality:
        type: string
      integrity:
        type: string
      availability:
        type: string
      easeOfExploitation:
        type: string
  RiskSummary:
    type: object
    properties:
      riskCount:
        $ref: '#/definitions/RiskCount'
      inherentRisk:
        type: integer
      projectedRisk:
        type: integer
      residualRisk:
        type: integer
  RiskCount:
    type: object
    properties:
      mitigated:
        type: integer
      low:
        type: integer
      medium:
        type: integer
      high:
        type: integer
      critical:
        type: integer
  ThreatControl:
    type: object
    properties:
      ref:
        type: string
      mitigation:
        type: integer
  Error:
    type: object
    properties:
      status:
        type: string
      errors:
        type: array
        items:
          $ref: '#/definitions/Message'
  Message:
    type: string
  ControlCommand:
    type: object
    properties:
      ref:
        type: string
        description: Reference field value
      name:
        type: string
        description: Name field value
      desc:
        type: string
        description: Description field value
      mitigation:
        type: integer
        description: Mitigation
      test:
        $ref: '#/definitions/TestCommand'
      state:
        type: string
        description: Countermeasure state
        enum:
          - not-applicable
          - rejected
          - recommended
          - required
          - implemented
      costRating:
        type: string
        description: Countermeasure cost
        enum:
          - low
          - medium
          - high
      standards:
        type: array
        description: List of standards
        items:
          type: object
          properties:
            ref:
              type: string
              description: Reference of the Standard
            name:
              type: string
              description: Name of the Supported Standard
            supportedStandardRef:
              type: string
              description: Reference of the Supported Standard
  TestCommand:
    type: object
    properties:
      steps:
        type: string
        description: Test steps
      notes:
        type: string
        description: Test notes
    description: Test
  Group:
    type: object
    properties:
      ref:
        type: string
        description: Unique identifier of the group
      name:
        type: string
        description: Name of the group
      desc:
        type: string
        description: Description of the group
    description: Group
  User:
    type: object
    properties:
      username:
        type: string
        description: Username of the User
      firstName:
        type: string
        description: First Name of the User
      lastName:
        type: string
        description: Last Name of the User
      email:
        type: string
        description: Email of the User
      userGroups:
        type: array
        items:
          type: string
          description: Roles group
      userRoles:
        type: array
        items:
          type: string
          description: User roles
    description: User
  UserDetailed:
    type: object
    properties:
      username:
        type: string
        description: Username of the User
      firstName:
        type: string
        description: First Name of the User
      lastName:
        type: string
        description: Last Name of the User
      email:
        type: string
        description: Email of the User
      userGroups:
        type: array
        items:
          type: string
          description: Roles group
      userRoles:
        type: array
        items:
          type: string
          description: User roles
      apiToken:
        type: string
        description: Token to be able to make calls through the API
      passwordExpired:
        type: boolean
        description: Indicated if the password is expired
    description: User
  SupportedStandard:
    type: object
    properties:
      ref:
        type: string
        description: Unique identifier of the Supported Standard
      name:
        type: string
        description: Name of the Supported Standard
    description: Supported Standard
  CategoryComponent:
    type: object
    properties:
      ref:
        type: string
        description: Unique identifier of the Category of the Component
      name:
        type: string
        description: Name of the Category of the Component
    description: Category of the Component
  ComponentDefinition:
    type: object
    properties:
      ref:
        type: string
        description: Unique identifier of the Component Definition
      name:
        type: string
        description: Name of the Component Definition
      desc:
        type: string
        description: Description of the Component Definition
      categoryRef:
        type: string
        description: Reference of the category of the component
      riskPatterns:
        type: array
        items:
          type: object
          properties:
            ref:
              type: string
              description: Reference of the Risk Pattern
    description: Component Definition
  DataFlow:
    type: object
    properties:
      name:
        type: string
        description: Name of the DataFlow
      source:
        type: string
        description: Reference of the source Component
      target:
        type: string
        description: Reference of the target Component
      assets:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: Name of the Asset
    description: DataFlow