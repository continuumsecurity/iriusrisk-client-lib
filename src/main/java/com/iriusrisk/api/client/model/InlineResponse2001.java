/*
 * IriusRisk API
 * Products API
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.iriusrisk.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.iriusrisk.api.client.model.ProductsrefcomponentscomponentReftestscweControl;
import com.iriusrisk.api.client.model.ProductsrefcomponentscomponentReftestscweSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * InlineResponse2001
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-15T08:48:15.539+01:00")



public class InlineResponse2001 {
  @JsonProperty("id")
  private BigDecimal id = null;

  @JsonProperty("source")
  private ProductsrefcomponentscomponentReftestscweSource source = null;

  @JsonProperty("control")
  private ProductsrefcomponentscomponentReftestscweControl control = null;

  @JsonProperty("weakness")
  private ProductsrefcomponentscomponentReftestscweControl weakness = null;

  public InlineResponse2001 id(BigDecimal id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public InlineResponse2001 source(ProductsrefcomponentscomponentReftestscweSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public ProductsrefcomponentscomponentReftestscweSource getSource() {
    return source;
  }

  public void setSource(ProductsrefcomponentscomponentReftestscweSource source) {
    this.source = source;
  }

  public InlineResponse2001 control(ProductsrefcomponentscomponentReftestscweControl control) {
    this.control = control;
    return this;
  }

   /**
   * Get control
   * @return control
  **/
  @ApiModelProperty(value = "")
  public ProductsrefcomponentscomponentReftestscweControl getControl() {
    return control;
  }

  public void setControl(ProductsrefcomponentscomponentReftestscweControl control) {
    this.control = control;
  }

  public InlineResponse2001 weakness(ProductsrefcomponentscomponentReftestscweControl weakness) {
    this.weakness = weakness;
    return this;
  }

   /**
   * Get weakness
   * @return weakness
  **/
  @ApiModelProperty(value = "")
  public ProductsrefcomponentscomponentReftestscweControl getWeakness() {
    return weakness;
  }

  public void setWeakness(ProductsrefcomponentscomponentReftestscweControl weakness) {
    this.weakness = weakness;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.id, inlineResponse2001.id) &&
        Objects.equals(this.source, inlineResponse2001.source) &&
        Objects.equals(this.control, inlineResponse2001.control) &&
        Objects.equals(this.weakness, inlineResponse2001.weakness);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, source, control, weakness);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    control: ").append(toIndentedString(control)).append("\n");
    sb.append("    weakness: ").append(toIndentedString(weakness)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

